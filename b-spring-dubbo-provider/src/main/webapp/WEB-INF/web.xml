<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:provider.xml</param-value>
    </context-param>
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
            <!--<param-value>classpath:atomikos/spring-mvc.xml</param-value>-->
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--配置ContextLoaderListener表示该工程要以spring方式启动，-->
    <!--启动后会默认在WEB-INF下查找applicationContext.xml，作为容器的配置文件-->
    <!--这里使用了自定义的ContextLoaderListener，来加载容器启动时需要的一些参数（比如用于@Conditional 注解的判断），-->
    <!--赋值给Environment对象，这样后面的只需要直接从ApplicationContext中的Environment对象中取即可-->

</web-app>